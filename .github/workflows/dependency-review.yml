name: Dependency Review

# trigger on main branch but only if specific files or paths have changes
on:
  pull_request:
    branches:
      - main
    paths:
      # only check if a manifest file has changed
      - "Dockerfile"
      - "pyproject.toml"
      - "poetry.lock"
      - ".github/**"

# ensures only one run of the workflow happens per branch or per run (if not associated with a branch)
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

permissions:
  contents: read
  pull-requests: write

jobs:
  dependency-review:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      # Find the configuration options here: https://github.com/actions/dependency-review-action?tab=readme-ov-file#configuration-options
      # The configuration here is verbose so the behavior should be more self-documenting.
      - uses: actions/dependency-review-action@v3
        with:
          # # default for license-check is true
          # license-check: true
          # # default for vulnerabity-check is true
          # vulnerability-check: true
          # # this will fail if the security advisory databse has a minimum level of "fail-on-severity" value or higher.
          # fail-on-severity: low
          # comment-summary-in-pr: "on-failure"
          # # Deny specific packages. Any number of packages to block in a PR. Must be in purl format.
          # # BUG! This does not cause an error. It's flagged on the console, but should fail the PR check.
          # deny-packages: "pkg:pypi/pycrypto" 
          # # Deny all copy-left licenses.  NOTE: Not supported for use with GitHub Enterprise Server. 
          # # License identifiers can be found here: https://spdx.org/licenses/
          # # BUG: There is no way to fail on an unknown license
          # deny-licenses: "GPL-1.0, GPL-2.0, GPL-3.0, AGPL-1.0, AGPL-3.0, LGPL-2.1, LGPL-3.0, MPL-2.0, CDDL-1.0, EPL-1.0"
          # # License types to explicitly allow. NOTE: Not supported for use with GitHub Enterprise Server
          # ## allow-licenses: ""
          # # Allow list of packages that may have failed a license check but are explicitly OK. NOTE: Not supported for use with GitHub Enterprise Server
          # allow-dependencies-licenses: "pkg:pypi/erpnext, pkg:pypi/flask-oidc-ex"
          # # When set to true, the action will output information about all the known OpenSSF Scorecard scores for the dependencies changed in this pull request.
          # # BUG: This option give this warning causing the rest of the checks to not work properly (no errors) Unexpected input(s) 'show-openssf-scorecard-levels', valid inputs are ['repo-token', 'fail-on-severity', 'fail-on-scopes', 'base-ref', 'head-ref', 'config-file', 'allow-licenses', 'deny-licenses', 'allow-dependencies-licenses', 'allow-ghsas', 'external-repo-token', 'license-check', 'vulnerability-check', 'comment-summary-in-pr', 'deny-packages', 'deny-groups', 'retry-on-snapshot-warnings', 'retry-on-snapshot-warnings-timeout', 'warn-only']
          # # show-openssf-scorecard-levels: true

          # this will fail if the security advisory databse has a minimum level of "fail-on-severity" value or higher.
          fail-on-severity: low
          comment-summary-in-pr: "on-failure"
          # Deny specific packages
          deny-packages: "pkg:pypi/pycrypto"
          # Deny all copy-left licenses
          deny-licenses: "GPL-1.0, GPL-2.0, GPL-3.0, AGPL-1.0, AGPL-3.0, LGPL-2.1, LGPL-3.0, MPL-2.0, CDDL-1.0, EPL-1.0"
          # Error out if there are unknown licenese detected. Note: There is no allow list if this fails.
          deny-unknown-license: true
          # Allow list of packages that may have failed a license check but are explicitly OK.
          allow-packages: "pkg:pypi/erpnext, pkg:pypi/flask-oidc-ex"
          
